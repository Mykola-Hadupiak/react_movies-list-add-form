{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","helpers/validation.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","onValidate","useState","Math","random","toFixed","slice","id","touched","setTouched","isValid","setIsValid","hasError","trim","htmlFor","type","classNames","event","onBlur","valid","checkValidation","str","test","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","isDisabled","handleChange","e","target","prevMovie","onSubmit","preventDefault","disabled","App","moviesFromServer","moviesToRender","setMoviesToRender","currMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f146ff53.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onValidate?: (str: string) => boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onValidate,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n\n  const hasError = touched && required && (!value || !value.trim());\n\n  const handleBlur = () => {\n    setTouched(true);\n\n    if (onValidate) {\n      const valid = onValidate(value);\n\n      setIsValid(valid);\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          required={required}\n          onChange={event => onChange(event)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(!isValid && value) && (\n        <p className=\"help is-danger\">Type correct link</p>\n      )}\n    </div>\n  );\n};\n","export const checkValidation = (str: string) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(str);\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { checkValidation } from '../../helpers/validation';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({\n  onAdd,\n}) => {\n  const [count, setCount] = useState(0);\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const reset = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setCount(count + 1);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const movie: Movie = {\n      ...newMovie,\n    };\n\n    onAdd(movie);\n\n    reset();\n  };\n\n  const isDisabled = (\n    !(title.trim() && imgUrl.trim() && imdbUrl.trim() && imdbId.trim())\n    || !(checkValidation(imgUrl) && checkValidation(imdbUrl)));\n\n  const handleChange = (\n    name: keyof Movie,\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { value } = e.target;\n\n    setNewMovie((prevMovie: Movie) => ({\n      ...prevMovie,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(event) => handleChange('title', event)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(event) => handleChange('description', event)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(event) => handleChange('imgUrl', event)}\n        onValidate={checkValidation}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(event) => handleChange('imdbUrl', event)}\n        onValidate={checkValidation}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(event) => handleChange('imdbId', event)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [moviesToRender, setMoviesToRender]\n    = useState<Movie[]>(moviesFromServer);\n\n  const handleAddMovie = (movie: Movie) => {\n    setMoviesToRender((currMovies) => [\n      ...currMovies,\n      movie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesToRender} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}